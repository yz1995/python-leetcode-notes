#给定一个数组 A[0,1,…,n-1]，请构建一个数组 B[0,1,…,n-1]
#其中 B 中的元素 B[i]=A[0]×A[1]×…×A[i-1]×A[i+1]×…×A[n-1]
#不能使用除法。
#暴力法
class Solution:
    def constructArr(self, a: List[int]) -> List[int]:
        b=[0]*len(a)
        i=0
        while i<len(a):
            if a[i]==0:
                a.pop(i)
                b[i]=reduce(lambda x,y:x*y,a)
                return b
            elif i<len(a)-1:
                tmp=a[:i]+a[i+1:]
            else:
                tmp=a[:i]
            b[i]=reduce(lambda x,y:x*y,tmp)
            i+=1
        return b
#对称遍历
class Solution:
    def constructArr(self, a: List[int]) -> List[int]:
        b, tmp = [1] * len(a), 1
        for i in range(1, len(a)):
            b[i] = b[i - 1] * a[i - 1] # 下三角
        for i in range(len(a) - 2, -1, -1): 
            tmp *= a[i + 1] # 上三角
            b[i] *= tmp # 下三角 * 上三角
        return b

